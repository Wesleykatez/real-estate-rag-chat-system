[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=10
    --html=test_reports/report.html
    --self-contained-html
    --junitxml=test_reports/junit.xml
    --cov=backend
    --cov=frontend/src
    --cov-report=html:test_reports/coverage
    --cov-report=term-missing
    --cov-report=xml:test_reports/coverage.xml
    --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    authentication: Authentication tests
    database: Database tests
    api: API tests
    frontend: Frontend tests
    backend: Backend tests
    slow: Slow running tests
    smoke: Smoke tests
    regression: Regression tests
    load: Load testing
    stress: Stress testing
    penetration: Penetration testing
    file_upload: File upload tests
    chat: Chat functionality tests
    property: Property management tests
    user_management: User management tests
    rate_limiting: Rate limiting tests
    error_handling: Error handling tests
    validation: Input validation tests
    cache: Cache functionality tests
    ai: AI functionality tests
    rag: RAG functionality tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Environment variables for testing
env =
    ENVIRONMENT=test
    DATABASE_URL=sqlite:///./test.db
    CHROMA_PERSIST_DIRECTORY=./test_chroma
    REDIS_URL=redis://localhost:6379/1
    GOOGLE_API_KEY=test_api_key
    JWT_SECRET_KEY=test_secret_key
    JWT_ALGORITHM=HS256
    JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
    JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
    BCRYPT_ROUNDS=4
    RATE_LIMIT_REQUESTS_PER_MINUTE=60
    RATE_LIMIT_LOGIN_ATTEMPTS=5
    SECRET_KEY=test_secret_key_for_testing
    ACCESS_TOKEN_EXPIRE_MINUTES=30

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# addopts = -n auto  # Uncomment for parallel execution

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = backend,frontend/src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */node_modules/*
    */migrations/*
    */static/*
    */media/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = test_reports/coverage

# Pytest-html configuration
[html]
self_contained = true
